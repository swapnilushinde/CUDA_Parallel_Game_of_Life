-bash-4.1$ gcc -o gol_seq_64  gol_seq_64.c -lm -std=c99
-bash-4.1$ ./gol_seq_64
Enter number of element - N*N (should be perfect square) 
64
Do you want infinite loop('y' or 'n') : n
n
Enter # of generations
3
0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 
printing in row col wise
0 0 1 0 0 0 1 0 
0 1 1 1 0 0 0 0 
1 1 1 0 0 0 0 1 
0 0 1 1 0 1 1 0 
1 0 1 1 0 0 1 0 
0 0 1 0 0 1 1 1 
0 0 0 0 1 1 1 0 
0 0 0 1 0 0 1 1 
Generation 1 is 
0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 
grid presentation
0 1 0 0 0 0 1 1 
0 0 0 1 0 0 0 1 
1 0 0 0 1 0 1 1 
0 0 0 0 1 1 1 0 
0 0 0 0 0 0 0 0 
0 1 1 0 0 0 0 0 
0 0 0 1 1 0 0 0 
0 0 0 1 1 0 0 1 

Generation 2 is 
0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 
grid presentation
0 0 1 1 1 0 1 1 
0 0 0 0 0 1 0 0 
1 0 0 1 1 0 0 0 
0 0 0 0 1 0 1 0 
0 0 0 0 0 1 0 0 
0 0 1 1 0 0 0 0 
0 0 0 0 1 0 0 0 
1 0 1 1 1 1 1 1 

Generation 3 is 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 
grid presentation
1 1 1 0 0 0 0 0 
0 0 1 0 0 1 1 1 
0 0 0 1 1 0 0 0 
0 0 0 1 1 0 0 0 
0 0 0 1 1 1 0 0 
0 0 0 1 1 0 0 0 
0 1 0 0 0 0 1 1 
1 1 1 0 0 0 0 0 

# elements in sequential processing 64 
# of generations 3 
Elapsed time in microseconds 197